@model DiagonsticTestManagement.ViewModels.TestEntryInputModel
@{
    ViewBag.Title = "CreateV1";
}

<div class="row">
    <div class="col-12">
        <h3>Create new test entry</h3>
        @using (Html.BeginForm("Create", "TestEntries", FormMethod.Post, new { id = "f", enctype = "multipart/form-data" }))
        {
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.PatientName, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.PatientName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.PatientName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.Age, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.MobileNo, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.MobileNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.MobileNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.TestDate, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.TestDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.TestDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.DueDate, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.DueDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.DueDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mb-1">
                @Html.LabelFor(x => x.Picture, new { @class = "col-form-label col-2" })
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", type = "file" })
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="d-flex justify-content-between mb-1">
                <h4>Tests</h4>
                <button type="button" id="add" class="btn btn-secondary btn-sm">+</button>
            </div>
            <div id="child">
                @Html.Action("CreateTestEntry")
            </div>
            <div class="form-group mb-1">

                <div class="col-4 offset-2">
                    <button type="submit" class="btn btn-primary">Save</button>

                </div>
            </div>
        }
    </div>
</div>
@section scripts {
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        $(() => {
            $(document).on("change", ".select", function () {
                var p = $(this).attr("id");
                console.log(p);
                //console.log($(this).parent().parent().find("#Fee"));
                var q = $(this).parent().parent().find("#Fee");
                console.log(q);
                 $.ajax({
                    type: "POST",
                    url: '/TestEntries/GetFee/' + $(this).val(),
                    dataType: "json",
                    success: data => {
                        console.log(data);
                        q.val(data);
                    }
                });
            })
            //$('.select').change(function () {
            //    var p = $(this).attr("id");
            //    console.log(p);
            //    //console.log($(this).parent().parent().find("#Fee"));
            //    var q = $(this).parent().parent().find("#Fee");
            //    console.log(q);
           
            //});
            $("#add").click(() => {
               
                $.ajax({
                    type: "GET",
                    url: "/TestEntries/CreateTestEntry",
                   
                    success: r => {
                        console.log(r);
                        $("#child").append(r);
                    }
                });
            });
        });
    </script>
}

